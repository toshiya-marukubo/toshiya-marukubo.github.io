"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),Object.defineProperty(a,"prototype",{writable:!1}),a}var vertexShader="\nattribute float number;\nuniform float uTime;\nuniform vec2 uMouse;\nfloat PI = 3.14159265359;\n\n// Simplex 4D Noise \n// by Ian McEwan, Ashima Arts\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nfloat permute(float x){return floor(mod(((x*34.0)+1.0)*x, 289.0));}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nfloat taylorInvSqrt(float r){return 1.79284291400159 - 0.85373472095314 * r;}\n\nvec4 grad4(float j, vec4 ip){\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www; \n\n  return p;\n}\n\nfloat snoise(vec4 v){\n  const vec2  C = vec2( 0.138196601125010504,  // (5 - sqrt(5))/20  G4\n                        0.309016994374947451); // (sqrt(5) - 1)/4   F4\n  // First corner\n  vec4 i  = floor(v + dot(v, C.yyyy) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n  // Other corners\n  // Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n  // i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n\n  // i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  // x0 = x0 - 0.0 + 0.0 * C \n  vec4 x1 = x0 - i1 + 1.0 * C.xxxx;\n  vec4 x2 = x0 - i2 + 2.0 * C.xxxx;\n  vec4 x3 = x0 - i3 + 3.0 * C.xxxx;\n  vec4 x4 = x0 - 1.0 + 4.0 * C.xxxx;\n\n  // Permutations\n  i = mod(i, 289.0); \n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n  // Gradients\n  // ( 7*7*6 points uniformly over a cube, mapped onto a 4-octahedron.)\n  // 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0);\n  vec4 p0 = grad4(j0,   ip);\n  vec4 p1 = grad4(j1.x, ip);\n  vec4 p2 = grad4(j1.y, ip);\n  vec4 p3 = grad4(j1.z, ip);\n  vec4 p4 = grad4(j1.w, ip);\n\n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt(dot(p4,p4));\n\n  // Mix contributions from the five corners\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n}\n\nconst float scale = 0.1;\n\nvoid main(){\n  vec3 pos = position;\n\n  float noisy =\n    snoise(\n      vec4(\n        pos.x + cos(pos.x + uTime) * scale,\n        pos.y + sin(pos.y + uTime) * scale, \n        pos.z + tan(pos.z + uTime * 0.5) * scale,\n        uTime * 0.1\n      ));\n  \n  pos.x += cos(pos.x * 5.0 * noisy + uTime * 1.0) * noisy;\n  pos.y += sin(pos.x * 5.0 * noisy + uTime * 1.0) * noisy;\n  pos.z += tan(pos.z * 5.0 + uTime * 1.0) * 0.1;\n  \n  vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\n  \n  gl_PointSize = 2.0 * (4.0 / - mvPosition.z);\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fragmentShader="\nvoid main () {\n  // Reference\n  // https://qiita.com/uma6661/items/20accc9b5fb9845fc73a\n  // Thank you so much.\n  float f = length(gl_PointCoord - vec2(0.5, 0.5));\n  if ( f > 0.1 ) discard;\n  \n  gl_FragColor = vec4(0.5, 0.8, 1.0, 1.0);\n}\n",Mouse=function(){function a(b){_classCallCheck(this,a),this.sketch=b,this.initialize()}return _createClass(a,[{key:"initialize",value:function initialize(){this.delta=0,this.mouse=new THREE.Vector3,this.setupEvents()}},{key:"setupEvents",value:function setupEvents(){window.addEventListener("scroll",this.onScroll.bind(this),!1),window.addEventListener("mousemove",this.onMousemove.bind(this),!1),window.addEventListener("touchmove",this.onTouchmove.bind(this),!1)}},{key:"onScroll",value:function onScroll(){var a=window.pageYOffset,b=document.body.scrollHeight-window.innerHeight;this.delta=a/b}},{key:"onMousemove",value:function onMousemove(a){this.mouse.x=2*(a.clientX/window.innerWidth)-1,this.mouse.y=2*-(a.clientY/window.innerHeight)+1,this.mouse.z=0}},{key:"onTouchmove",value:function onTouchmove(a){var b=a.targetTouches[0];this.mouse.x=2*(b.pageX/window.innerWidth)-1,this.mouse.y=2*-(b.pageY/window.innerHeight)+1,this.mouse.z=0}}]),a}(),Sketch=function(){function a(){_classCallCheck(this,a),this.createCanvas(),this.setupEvents(),this.time=new THREE.Clock(!0),this.mouse=new Mouse(this),this.initialize()}return _createClass(a,[{key:"createCanvas",value:function createCanvas(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),document.body.appendChild(this.renderer.domElement)}},{key:"setupEvents",value:function setupEvents(){window.addEventListener("resize",this.onResize.bind(this),!1)}},{key:"onResize",value:function onResize(){this.preWidth===window.innerWidth&&480>window.innerWidth||this.initialize()}},{key:"initialize",value:function initialize(){this.animationId&&cancelAnimationFrame(this.animationId),this.preWidth=this.width=Math.ceil(window.innerWidth),this.height=Math.ceil(window.innerHeight),this.scene=new THREE.Scene,this.setupCanvas(),this.setupCamera(),this.setupLight(),this.setupShape(),this.draw()}},{key:"setupCanvas",value:function setupCanvas(){this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(1),this.renderer.setClearColor(467766,1),this.renderer.domElement.style.position="fixed",this.renderer.domElement.style.top="0",this.renderer.domElement.style.left="0",this.renderer.domElement.style.width="100%",this.renderer.domElement.style.height="100%",this.renderer.domElement.style.zIndex="-1",this.renderer.domElement.style.outline="none"}},{key:"setupCamera",value:function setupCamera(){var a=35*(Math.PI/180);this.dist=this.height/2/Math.tan(a),this.camera=new THREE.PerspectiveCamera(70,this.width/this.height,.01,4),this.cameraV=new THREE.Vector3,this.cameraP=new THREE.Vector3(0,0,2),this.camera.position.set(this.cameraP),this.camera.lookAt(new THREE.Vector3),this.scene.add(this.camera)}},{key:"updateCamera",value:function updateCamera(){this.cameraV.subVectors(this.mouse.mouse,this.cameraP).multiplyScalar(.05),this.cameraP.add(this.cameraV),this.camera.position.set(2*this.cameraP.x,2*this.cameraP.y,2),this.camera.lookAt(new THREE.Vector3)}},{key:"setupLight",value:function setupLight(){this.directionalLight=new THREE.DirectionalLight(16777215),this.scene.add(this.directionalLight),this.spotLight=new THREE.SpotLight(16777215),this.spotLightV=new THREE.Vector3,this.spotLightP=new THREE.Vector3(0,0,2),this.spotLight.position.set(this.spotLightP),this.spotLight.lookAt(new THREE.Vector3),this.scene.add(this.spotLight)}},{key:"updateLight",value:function updateLight(){this.spotLightV.subVectors(this.mouse.mouse,this.spotLightP).multiplyScalar(.05),this.spotLightP.add(this.spotLightV),this.spotLight.position.set(2*this.spotLightP.x,2*this.spotLightP.y,2),this.spotLight.lookAt(new THREE.Vector3)}},{key:"setupShape",value:function setupShape(){this.shape=new Shape(this,0,0,0)}},{key:"draw",value:function draw(){var a=this.time.getElapsedTime();this.shape.render(a),this.updateCamera(a),this.updateLight(a),this.renderer.render(this.scene,this.camera),this.animationId=requestAnimationFrame(this.draw.bind(this))}}]),a}(),Shape=function(){function a(b,c,d,e){_classCallCheck(this,a),this.sketch=b,this.position=new THREE.Vector3(c,d,e),this.setupSizes(),this.initialize()}return _createClass(a,[{key:"setupSizes",value:function setupSizes(){this.count=null,this.sphereSize=null,768>this.sketch.width&&(this.count=8e4,this.sphereSize=.25),768<=this.sketch.width&&(this.count=16e4,this.sphereSize=.3)}},{key:"initialize",value:function initialize(){this.geometry=new THREE.BufferGeometry,this.vertices=new Float32Array(3*this.count),this.numbers=new Float32Array(this.count);for(var a=0;a<3*this.count;a++)this.vertices[3*a+0]=.5*Math.random()-.25,this.vertices[3*a+1]=2*Math.random()-1,this.vertices[3*a+2]=2*Math.random()-1;for(var b=0;b<this.count;b++)this.numbers[b]=Math.random();this.geometry.setAttribute("position",new THREE.BufferAttribute(this.vertices,3)),this.geometry.setAttribute("number",new THREE.BufferAttribute(this.numbers,1)),this.material=new THREE.ShaderMaterial({side:THREE.DoubleSide,uniforms:{uTime:{type:"f",value:0},uResolution:{type:"v2",value:new THREE.Vector2(this.sketch.width,this.sketch.height)}},blending:THREE.AdditiveBlending,vertexShader:vertexShader,fragmentShader:fragmentShader}),this.mesh=new THREE.Points(this.geometry,this.material),this.sketch.scene.add(this.mesh),this.sphereGeometry=new THREE.SphereGeometry(this.sphereSize,36,36),this.sphereMaterial=new THREE.MeshLambertMaterial({color:38143,emissive:467766}),this.sphereMesh=new THREE.Mesh(this.sphereGeometry,this.sphereMaterial),this.sketch.scene.add(this.sphereMesh)}},{key:"render",value:function render(a){this.mesh.material.uniforms.uTime.value=a,this.sphereMesh.position.y=.1*Math.sin(a),this.sphereMesh.rotation.z=.6*a,this.sphereMesh.rotation.x=.4*a}}]),a}();(function(){window.addEventListener("load",function(){new Loading("loading","loaded"),new FullScreen,new Sketch})})();