"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),Object.defineProperty(a,"prototype",{writable:!1}),a}var vertexSphereShader="\nuniform float uTime;\nvarying vec2 vUv;\nfloat PI = 3.14159265359;\n\nvoid main(){\n  vec3 pos = position;\n  \n  pos.y += sin(pos.y * 0.01 - uTime * 20.0) * 20.0;\n  pos.z += sin(pos.y * 0.01 - uTime * 20.0) * 20.0;\n  \n  vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\n  \n  vUv = uv;\n  \n  gl_Position = projectionMatrix * mvPosition;\n}\n\n",fragmentSphereShader="\nuniform float uTime;\nuniform sampler2D uTexture;\nvarying vec2 vUv;\n\nvoid main () {\n  vec4 color = texture2D(uTexture, vUv);\n  \n  gl_FragColor = vec4(1.0 - color);\n}\n",vertexGroundShader="\nuniform float uTime;\nvarying vec2 vUv;\nfloat PI = 3.14159265359;\n\nvoid main(){\n  vec3 newPosition = position;\n\n  newPosition.y = sin(newPosition.x / PI * 2.0 + uTime) * 10.0 + newPosition.y;\n  newPosition.z = sin(newPosition.y / PI * 2.0 + uTime) * 5.0 + newPosition.z;\n  newPosition.x = sin(newPosition.z / PI * 2.0 + uTime) * 5.0 + newPosition.x;\n  \n  vec4 mvPosition = modelViewMatrix * vec4(newPosition, 1.0);\n  \n  vUv = uv;\n  \n  gl_Position = projectionMatrix * mvPosition;\n}\n",vertexRainShader="\nattribute float number;\nuniform float uTime;\nfloat PI = 3.14159265359;\n\nvoid main(){\n  vec3 pos = position;\n  \n  pos.x += tan(pos.x + uTime * 10.0 * number) * 100.0;\n  pos.y -= tan(pos.y + uTime * 10.0 * 0.5) * 100.0;\n  pos.z -= tan(pos.z + uTime * 10.0 * number) * 100.0;\n  \n  vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\n  \n  gl_PointSize = 40.0 * (80.0 / - mvPosition.z);\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fragmentRainShader="\n\nvoid main () {\n  float f = length(gl_PointCoord - vec2(0.5, 0.5));\n  if ( f > 0.1 ) discard;\n\n  gl_FragColor = vec4(1.0, 1.0, 1.0, 0.4);\n}\n",Mouse=function(){function a(b){_classCallCheck(this,a),this.sketch=b,this.initialize()}return _createClass(a,[{key:"initialize",value:function initialize(){this.delta=0,this.mouse=new THREE.Vector3,this.setupEvents()}},{key:"setupEvents",value:function setupEvents(){window.addEventListener("scroll",this.onScroll.bind(this),!1),window.addEventListener("mousemove",this.onMousemove.bind(this),!1),window.addEventListener("touchmove",this.onTouchmove.bind(this),!1)}},{key:"onScroll",value:function onScroll(){var a=window.pageYOffset,b=document.body.scrollHeight-window.innerHeight;this.delta=a/b}},{key:"onMousemove",value:function onMousemove(a){this.mouse.x=2*(a.clientX/window.innerWidth)-1,this.mouse.y=2*-(a.clientY/window.innerHeight)+1,this.mouse.z=0}},{key:"onTouchmove",value:function onTouchmove(a){var b=a.targetTouches[0];this.mouse.x=2*(b.pageX/window.innerWidth)-1,this.mouse.y=2*-(b.pageY/window.innerHeight)+1,this.mouse.z=0}}]),a}(),Sketch=function(){function a(){_classCallCheck(this,a),this.createCanvas(),this.setupEvents(),this.time=new THREE.Clock(!0),this.mouse=new Mouse(this),this.initialize()}return _createClass(a,[{key:"createCanvas",value:function createCanvas(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),document.body.appendChild(this.renderer.domElement)}},{key:"setupEvents",value:function setupEvents(){window.addEventListener("resize",this.onResize.bind(this),!1)}},{key:"onResize",value:function onResize(){this.preWidth===window.innerWidth||this.initialize()}},{key:"initialize",value:function initialize(){this.animationId&&cancelAnimationFrame(this.animationId),this.preWidth=this.width=Math.ceil(window.innerWidth),this.height=Math.ceil(window.innerHeight),this.scene=new THREE.Scene,this.setupCanvas(),this.setupCamera(),this.setupShape(),this.draw()}},{key:"setupCanvas",value:function setupCanvas(){this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(1),this.renderer.setClearColor(0,1),this.renderer.domElement.style.position="fixed",this.renderer.domElement.style.top="0",this.renderer.domElement.style.left="0",this.renderer.domElement.style.width="100%",this.renderer.domElement.style.height="100%",this.renderer.domElement.style.zIndex="-1",this.renderer.domElement.style.outline="none"}},{key:"setupCamera",value:function setupCamera(){var a=35*(Math.PI/180);this.dist=this.height/2/Math.tan(a),this.camera=new THREE.PerspectiveCamera(70,this.width/this.height,.01,10*this.dist),this.cameraV=new THREE.Vector3,this.cameraP=new THREE.Vector3(0,.1*this.dist,this.dist),this.camera.position.set(this.cameraP),this.camera.lookAt(new THREE.Vector3),this.scene.add(this.camera)}},{key:"updateCamera",value:function updateCamera(){this.cameraV.subVectors(this.mouse.mouse,this.cameraP).multiplyScalar(.05),this.cameraP.add(this.cameraV),this.camera.position.set(this.dist*this.cameraP.x,Math.max(150*this.cameraP.y,-150),this.dist*(1+this.mouse.delta)),this.camera.lookAt(new THREE.Vector3)}},{key:"setupLight",value:function setupLight(){this.directionalLight=new THREE.DirectionalLight(16777215),this.scene.add(this.directionalLight),this.spotLight=new THREE.SpotLight(16777215),this.spotLight.position.set(this.dist,this.dist,this.dist),this.scene.add(this.spotLight)}},{key:"setupShape",value:function setupShape(){this.setupSize(),this.shapes=[];for(var a,b=0;1>b;b++)a=new Shape(this,0,0,0,this.sphereSize,this.rainNumber,this.groundSize),this.shapes.push(a)}},{key:"setupSize",value:function setupSize(){this.sphereSize=null,this.groundSize=Math.max(this.width,this.height),this.rainNumber=null,768>=this.width&&(this.sphereSize=120,this.rainNumber=5e3),768<=this.width&&(this.sphereSize=192,this.rainNumber=2e4)}},{key:"draw",value:function draw(){for(var a=this.time.getElapsedTime(),b=0;b<this.shapes.length;b++)this.shapes[b].render(.1*a);this.updateCamera(a),this.renderer.render(this.scene,this.camera),this.animationId=requestAnimationFrame(this.draw.bind(this))}}]),a}(),Shape=function(){function a(b,c,d,e,f,h,i){_classCallCheck(this,a),this.sketch=b,this.sphereSize=f,this.rainNumber=h,this.groundSize=i,this.position=new THREE.Vector3(c,d,e),this.initialize()}return _createClass(a,[{key:"initialize",value:function initialize(){this.createTexture(),this.sphereGeometry=new THREE.SphereGeometry(this.sphereSize,16,16),this.sphereMaterial=new THREE.ShaderMaterial({side:THREE.DoubleSide,uniforms:{uTime:{type:"f",value:0},uTexture:{type:"t",value:this.returnTexture()}},vertexShader:vertexSphereShader,fragmentShader:fragmentSphereShader}),this.sphereMesh=new THREE.Mesh(this.sphereGeometry,this.sphereMaterial),this.sphereMesh.position.set(this.position.x,this.position.y,this.position.z),this.sketch.scene.add(this.sphereMesh),this.rainGeometry=new THREE.BufferGeometry,this.vertices=new Float32Array(3*this.rainNumber),this.numbers=new Float32Array(this.rainNumber);for(var a=0;a<3*this.rainNumber;a++)this.vertices[3*a+0]=Math.random()*this.sketch.width-this.sketch.width/2,this.vertices[3*a+1]=Math.random()*this.sketch.height-this.sketch.height/2,this.vertices[3*a+2]=Math.random()*this.sketch.dist-this.sketch.dist/2;for(var b=0;b<this.rainNumber;b++)this.numbers[b]=Math.random();this.rainGeometry.setAttribute("position",new THREE.BufferAttribute(this.vertices,3)),this.rainGeometry.setAttribute("number",new THREE.BufferAttribute(this.numbers,1)),this.rainMaterial=new THREE.ShaderMaterial({side:THREE.DoubleSide,uniforms:{uTime:{type:"f",value:0}},blending:THREE.AdditiveBlending,transparent:!0,vertexShader:vertexRainShader,fragmentShader:fragmentRainShader}),this.rain=new THREE.Points(this.rainGeometry,this.rainMaterial),this.sketch.scene.add(this.rain),this.groundGeometry=new THREE.PlaneGeometry(this.groundSize,this.groundSize,32,32),this.groundMaterial=new THREE.ShaderMaterial({side:THREE.DoubleSide,uniforms:{uTime:{type:"f",value:0},uTexture:{type:"t",value:this.returnTexture()}},vertexShader:vertexGroundShader,fragmentShader:fragmentSphereShader}),this.groundMesh=new THREE.Mesh(this.groundGeometry,this.groundMaterial),this.groundMesh.rotation.x=-90*Math.PI/180,this.groundMesh.position.y=-this.sphereSize,this.sketch.scene.add(this.groundMesh)}},{key:"createTexture",value:function createTexture(){this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d");this.canvas.width=256,this.canvas.height=256,this.pdm=new CellAutomaton(this.ctx,256,256),this.texture=new THREE.CanvasTexture(this.canvas)}},{key:"returnTexture",value:function returnTexture(){return this.texture}},{key:"updateTexture",value:function updateTexture(){this.pdm.render()}},{key:"render",value:function render(a){this.texture.needsUpdate=!0,this.updateTexture(a),this.rain.material.uniforms.uTime.value=a,this.groundMesh.material.uniforms.uTime.value=a,this.sphereMesh.material.uniforms.uTime.value=a;var b=1-this.sketch.mouse.delta;this.groundMesh.scale.set(b,b,b),this.rainGeometry.setDrawRange(0,Math.max(this.rainNumber*b,1e3))}}]),a}();(function(){window.addEventListener("load",function(){new FullScreen,new Observe("progress"),new Loading("loading","loaded"),new Sketch})})();