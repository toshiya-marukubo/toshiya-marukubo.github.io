"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),Object.defineProperty(a,"prototype",{writable:!1}),a}var vertexLineShader="\nuniform float uTime;\nuniform float uSize;\n\nvarying vec3 vPos;\n\nfloat PI = 3.14159265359;\n\nattribute float number;\n\nfloat a = 5.0;\nfloat b = 3.14159265359 / 3.0;\nfloat c = 7.0;\nfloat d = 3.14159265359 / 5.0;\n\nvoid main(){\n  vec3 pos = position.xyz;\n  \n  pos.x = cos(a * number + b + uTime) * uSize;\n  pos.y = cos(c * number + d + uTime) * uSize;\n  pos.z = tan(number + uTime) * uSize;\n  \n  vPos = pos;\n  \n  vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\n  \n  gl_Position = projectionMatrix * mvPosition;\n}\n",fragmentLineShader="\nuniform float uTime;\n\nvarying vec3 vPos;\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\n  return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid main () {\n  float len = length(vPos);\n  \n  vec3 color =\n    pal(\n      length(len * 0.001 - uTime * 0.5),\n      vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(2.0,1.0,0.0),vec3(0.5,0.20,0.25)\n    );\n  \n  gl_FragColor = vec4(color, 0.2);\n}\n",vertexBoxShader="\nuniform float uTime;\nuniform float uSize;\n\nvarying vec3 vPos;\n\nfloat PI = 3.14159265359;\n\nattribute float number;\n\nfloat a = 5.0;\nfloat b = 3.14159265359 / 3.0;\nfloat c = 7.0;\nfloat d = 3.14159265359 / 5.0;\n\nvoid main(){\n  vec3 pos = position.xyz;\n  \n  vPos = pos;\n  \n  vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\n  \n  //gl_PointSize = 60.0 * (120.0 / - mvPosition.z);\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fragmentBoxShader="\nuniform float uTime;\n\nvarying vec3 vPos;\n\n// Referred to https://iquilezles.org/www/articles/palettes/palettes.htm\n// Thank you so much.\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\n  return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid main () {\n  //float f = length(gl_PointCoord - vec2(0.5, 0.5));\n  //if (f > 0.1) discard;\n  \n  float len = length(vPos);\n  \n  vec3 color =\n    pal(\n      length(len * 0.01 - uTime * 0.5),\n      vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(2.0,1.0,0.0),vec3(0.5,0.20,0.25)\n    );\n  \n  gl_FragColor = vec4(color, 0.4);\n}\n",Mouse=function(){function a(b){_classCallCheck(this,a),this.sketch=b,this.initialize()}return _createClass(a,[{key:"initialize",value:function initialize(){this.delta=0,this.mouse=new THREE.Vector3,this.setupEvents()}},{key:"setupEvents",value:function setupEvents(){window.addEventListener("scroll",this.onScroll.bind(this),!1),window.addEventListener("mousemove",this.onMousemove.bind(this),!1),window.addEventListener("touchmove",this.onTouchmove.bind(this),!1)}},{key:"onScroll",value:function onScroll(){var a=window.pageYOffset,b=document.body.scrollHeight-window.innerHeight;this.delta=a/b}},{key:"onMousemove",value:function onMousemove(a){this.mouse.x=2*(a.clientX/window.innerWidth)-1,this.mouse.y=2*-(a.clientY/window.innerHeight)+1,this.mouse.z=0}},{key:"onTouchmove",value:function onTouchmove(a){var b=a.targetTouches[0];this.mouse.x=2*(b.pageX/window.innerWidth)-1,this.mouse.y=2*-(b.pageY/window.innerHeight)+1,this.mouse.z=0}}]),a}(),Sketch=function(){function a(){_classCallCheck(this,a),this.createCanvas(),this.setupEvents(),this.time=new THREE.Clock(!0),this.mouse=new Mouse(this),this.initialize()}return _createClass(a,[{key:"createCanvas",value:function createCanvas(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),document.body.appendChild(this.renderer.domElement)}},{key:"setupEvents",value:function setupEvents(){window.addEventListener("resize",this.onResize.bind(this),!1)}},{key:"onResize",value:function onResize(){this.preWidth===window.innerWidth&&480>window.innerWidth||this.initialize()}},{key:"initialize",value:function initialize(){this.animationId&&cancelAnimationFrame(this.animationId),this.preWidth=this.width=Math.ceil(window.innerWidth),this.height=Math.ceil(window.innerHeight),this.scene=new THREE.Scene,this.setupCanvas(),this.setupCamera(),this.setupShape(),this.draw()}},{key:"setupCanvas",value:function setupCanvas(){this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setClearColor("#001033",1),this.renderer.domElement.style.position="fixed",this.renderer.domElement.style.top="0",this.renderer.domElement.style.left="0",this.renderer.domElement.style.width="100%",this.renderer.domElement.style.height="100%",this.renderer.domElement.style.zIndex="-1",this.renderer.domElement.style.outline="none"}},{key:"setupCamera",value:function setupCamera(){var a=35*(Math.PI/180);this.dist=this.height/2/Math.tan(a),this.camera=new THREE.PerspectiveCamera(70,this.width/this.height,.01,10*this.dist),this.cameraV=new THREE.Vector3,this.cameraP=new THREE.Vector3(0,0,this.dist),this.camera.position.set(this.cameraP),this.camera.lookAt(new THREE.Vector3),this.scene.add(this.camera)}},{key:"updateCamera",value:function updateCamera(){this.cameraV.subVectors(this.mouse.mouse,this.cameraP).multiplyScalar(.05),this.cameraP.add(this.cameraV),this.camera.position.set(this.cameraP.x*this.dist,this.cameraP.y*this.dist,this.dist),this.camera.lookAt(new THREE.Vector3)}},{key:"setupLight",value:function setupLight(){this.directionalLight=new THREE.DirectionalLight(16777215),this.scene.add(this.directionalLight),this.spotLight=new THREE.SpotLight(16777215),this.spotLight.position.set(this.dist,this.dist,this.dist),this.scene.add(this.spotLight)}},{key:"setupShape",value:function setupShape(){this.setupSize(),this.shape=new Shape(this,0,0,0,this.cubeSize,this.lineNumber)}},{key:"setupSize",value:function setupSize(){this.cubeSize=null,this.lineNumber=null,768>=this.width&&(this.cubeSize=120,this.lineNumber=500),768<=this.width&&(this.cubeSize=192,this.lineNumber=1e3)}},{key:"draw",value:function draw(){var a=this.time.getElapsedTime();this.shape.render(a),this.updateCamera(a),this.renderer.render(this.scene,this.camera),this.animationId=requestAnimationFrame(this.draw.bind(this))}}]),a}(),Shape=function(){function a(b,c,d,e,f,g){_classCallCheck(this,a),this.sketch=b,this.position=new THREE.Vector3(c,d,e),this.cubeSize=f,this.lineNumber=g,this.initialize()}return _createClass(a,[{key:"initialize",value:function initialize(){this.boxGeometry=new THREE.BoxGeometry(.8*this.cubeSize,.8*this.cubeSize,.8*this.cubeSize,36,36,36),this.boxMaterial=new THREE.ShaderMaterial({side:THREE.DoubleSide,uniforms:{uTime:{type:"f",value:0}},blending:THREE.AdditiveBlending,transparent:!0,vertexShader:vertexBoxShader,fragmentShader:fragmentBoxShader}),this.boxMesh=new THREE.Mesh(this.boxGeometry,this.boxMaterial),this.sketch.scene.add(this.boxMesh),this.particleGeometry=new THREE.BufferGeometry,this.positions=new Float32Array(3*this.lineNumber),this.numbers=new Float32Array(this.lineNumber);for(var a=0;a<this.lineNumber;a++)this.positions.set([0,0,0],3*a);for(var b=0;b<this.lineNumber;b++)this.numbers.set([b],b);this.particleGeometry.setAttribute("position",new THREE.BufferAttribute(this.positions,3)),this.particleGeometry.setAttribute("number",new THREE.BufferAttribute(this.numbers,1)),this.particleMaterial=new THREE.ShaderMaterial({side:THREE.DoubleSide,uniforms:{uTime:{type:"f",value:0},uSize:{type:"f",value:this.size},uResolution:{type:"v2",value:new THREE.Vector2(this.sketch.width,this.sketch.height)}},blending:THREE.AdditiveBlending,transparent:!0,vertexShader:vertexLineShader,fragmentShader:fragmentLineShader}),this.linePoint=new THREE.Line(this.particleGeometry,this.particleMaterial),this.sketch.scene.add(this.linePoint)}},{key:"updateParameters",value:function updateParameters(a){this.linePoint.material.uniforms.uTime.value=a,this.linePoint.material.uniforms.uSize.value=this.cubeSize,this.linePoint.rotation.z=-a,this.boxMesh.material.uniforms.uTime.value=a,this.boxMesh.rotation.z=-a,this.boxMesh.rotation.x=a}},{key:"render",value:function render(a){this.updateParameters(a)}}]),a}();(function(){window.addEventListener("load",function(){new Loading("loading","loaded"),new FullScreen,new Sketch})})();